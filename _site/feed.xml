<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>I'm Amanda</title>
    <description>Vyaasa is a minimal Jekyll theme meant for writers. Long text posts will look good with this layout. This is a free theme and can be used for all kinds of Jekyll blogs.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 14 Dec 2016 11:36:55 +0800</pubDate>
    <lastBuildDate>Wed, 14 Dec 2016 11:36:55 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>Who is Amanda?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/veda-vyasa-ganesha.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m Amanda~
&lt;img src=&quot;/images/mahabharata-family-tree.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Do you see those names in green and yellow colored boxes. They are the ones who fought this epic battle.&lt;/p&gt;

&lt;p&gt;The Mahabharata is an epic narrative of the Kurukshetra War and the fates of the Kaurava and the Pandava princes. It also contains philosophical and devotional material, such as a discussion of the four “goals of life” or purusharthas.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Mahabharata&lt;/strong&gt; is the longest known epic poem and has been described as “the longest poem ever written”. Its longest version consists of over 100,000 shloka or over 200,000 individual verse lines (each shloka is a couplet), and long prose passages. About 1.8 million words in total, the Mahabharata is roughly ten times the length of the Iliad and the Odyssey combined. &lt;strong&gt;W. J. Johnson&lt;/strong&gt; has compared the importance of the Mahabharata in the context of world civilization to that of the &lt;strong&gt;Bible&lt;/strong&gt;, the works of &lt;strong&gt;Shakespeare&lt;/strong&gt;, the works of &lt;strong&gt;Homer&lt;/strong&gt;, &lt;strong&gt;Greek drama&lt;/strong&gt;, or the &lt;strong&gt;Qur’an&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can watch the battle here.&lt;/p&gt;

&lt;iframe class=&quot;video&quot; src=&quot;https://www.youtube.com/embed/zU_5WFb2oUk?list=PLVQ-5tGttzR9txcAtYJG2_XEieXE2yVnz&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 29 Oct 2016 02:04:56 +0800</pubDate>
        <link>http://localhost:4000/vyaasa/</link>
        <guid isPermaLink="true">http://localhost:4000/vyaasa/</guid>
        
        
      </item>
    
      <item>
        <title>Git Introduction</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;一、分布式版本管理系统&lt;/h3&gt;
&lt;p&gt;git是分布式版本管理系统，如图1中所示，我们可以把git分为服务器端和客户端两个部分。客户端把文件从服务器端全部镜像到本地，进行操作后，把修改文件提交到服务器端。&lt;/p&gt;

&lt;p&gt;因为客户端本地有自己的版本数据库，不再受server端限制，多数操作在本地进行。因此，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜 像出来的本地仓库恢复。因为每一次的提取操作，实际上都是一次对代码仓库的完整备份。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/git-version-system.jpg&quot; alt=&quot;分布式版本控制系统&quot; /&gt;&lt;/p&gt;
&lt;h6 id=&quot;section-1&quot;&gt;图1： 分布式版本控制系统&lt;/h6&gt;

&lt;h3 id=&quot;section-2&quot;&gt;二、非差异比较，直接文件快照&lt;/h3&gt;
&lt;p&gt;相较于集中版本管理系统关心文件内容的差异，git更关心文件整体是否发生变化。git像一个微型文件系统，git 不保存文件前后变化的差异数据。Git 更像是把变化的文件作快照后，记录在一个微型的文件系统中。每次提交更新时，它会纵览一遍所有文件的指纹信息并对文件作一快照，然后保存一个指向这次快照的索引。为提高性能，若文件没有变化，Git 不会再次保存，而只对上次保存的快照作一链接。这是 Git 同其他系统的重要区别。它完全颠覆了传统版本控制的套路，并对各个环节的实现方式作了新的设计。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/git-file-snapshot.jpg&quot; alt=&quot;Git 保存每次更新时的文件快照&quot; /&gt;&lt;/p&gt;
&lt;h6 id=&quot;git-&quot;&gt;图2： Git 保存每次更新时的文件快照&lt;/h6&gt;

&lt;h3 id=&quot;section-3&quot;&gt;三、近乎所有操作都是本地执行&lt;/h3&gt;
&lt;p&gt;在 git 中的绝大多数操作都只需要访问本地文件和资源，不用连网。但如果用 CVCS 的话，差不多所有操作都需要连接网络。因为 git 在本地磁盘上就保存着所有当前项目的历史更新，所以处理起来速度飞快。 举个例子，如果要浏览项目的历史更新摘要，git 不用跑到外面的服务器上去取数据回来，而直接从本地数据库读取后展示给你看。所以任何时候你都可以马上翻阅，无需等待。如果想要看当前版本的文件和一个月 前的版本之间有何差异，git 会取出一个月前的快照和当前文件作一次差异运算，而不用请求远程服务器来做这件事，或是把老版本的文件拉到本地来作比较。 用 git 就算你在飞机或者火车上，都可以非常愉快地频繁提交更新，等到了有网络的时候再上传到远程仓库。&lt;/p&gt;

&lt;h4 id=&quot;b1gitb&quot;&gt;&lt;b&gt;1.git本地分区&lt;/b&gt;&lt;/h4&gt;
&lt;p&gt;git有三个工作区&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;工作区：A Working Directory: where you’ll be doing all the work: creating, editing, deleting and organizing files&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  工作区可以理解为“创作区“，在工作区可以编辑（新建、删除、修改）文件
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;缓存区(索引区)：A Staging Area: where you’ll list changes you make to the working directory&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  缓存区可以理解为”变更记录区“，在工作区做了修改的文件，想要提交到仓库去，可能还有其他想法(想要攒一些文件一起提交/可能还要回退)，提交到缓存区，记录下已经变更的文件
      
  所谓的暂存区域只不过是个简单的文件，一般都放在 Git 目录中。有时候人们会把这个文件叫做索引文件，不过标准说法还是叫暂存区域。
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;本地仓库：A Repository: where Git permanently stores those changes as different versions of the project&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  文件被提交到本地仓库就会被记录到版本数据库中     
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/git-work-stage-repository.jpg&quot; alt=&quot;Git 工作区&quot; /&gt;&lt;/p&gt;
&lt;h6 id=&quot;section-4&quot;&gt;图3：工作目录，暂存区域，以及本地仓库&lt;/h6&gt;

&lt;h4 id=&quot;b2gitb&quot;&gt;&lt;b&gt;2.git基本命令&lt;/b&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;git init 在当前目录创建一个新的git本地仓库&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git status 查看git project状态&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  一个Git项目中文件的状态大概分成下面的两大类，而第二大类又分为三小类：

  1.未被跟踪的文件(untracked file)

  2.已被跟踪的文件(tracked file)

  - 2.1.被修改但未被暂存的文件（changed but not updated或modified）
  - 2.2.已暂存可以被提交的文件（changes to be committed 或staged）
  - 2.3.自上次提交以来，未修改的文件(clean 或 unmodified)
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git add “filename” 添加文件&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  把file添加到git的staging area
      
  git add 后面可以跟多个filename 即：可以同时提交多个文件到staging area
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git diff “filename”&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  把working directory文件和staging area文件进行diff操作
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;git commit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;提交缓冲区的文件到仓库，-m参数后跟该次commit描述&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;git log&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;查看commit的日志
          SHA     作者     日期     commit描述&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;git show HEAD&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    输出结果为所有commit信息
    这个展示的结果比git log详细一些
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;b3gitb&quot;&gt;&lt;b&gt;3.git的回滚&lt;/b&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;git checkout HEAD filename&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    当修改了工作区的某文件后，想回退至上次commit的状态
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git reset HEAD filename&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    将file同步为repository 最后一次提交的版本 staging area区域的文件
    也就是说当我不小心修改了工作区的文件，并且 add到staging area后，想要回滚
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git reset SHA&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    This command works by using the first 7 characters of the SHA of a previous commit.
    恢复的还是缓存区的数据
    回滚到前一个版本
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;b4branchb&quot;&gt;&lt;b&gt;4.branch&lt;/b&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;git branch		查询当前在哪个分支&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git branch NewBranchName		创建一个新的branch&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git checkout branch_name		切换git的分支&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git merge branch_name&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      进行合并工作是将分支的changes合并至master
      切换到master才能进行merge
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git branch -d branch_name&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 	我们创建branch有了结果后，最终会合并到master中，那么branch就可以删除了，我们使用-d option进行删除
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;b5gitb&quot;&gt;&lt;b&gt;5.多人协同使用git&lt;/b&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;git clone remote_location clone_name&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git remote -V		查询远程仓库的版本&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git fetch 将更新放在remote branch&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	git pull = git fetch + merge to local
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git merge origin/master 将更新merge到本地&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git push origin your_branch_name&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 28 Oct 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/git/</link>
        <guid isPermaLink="true">http://localhost:4000/git/</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 18 Sep 2016 02:04:56 +0800</pubDate>
        <link>http://localhost:4000/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>A sample post</title>
        <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.&lt;/p&gt;

&lt;p&gt;Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/wall.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus.&lt;/p&gt;

&lt;p&gt;Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante.&lt;/p&gt;

&lt;p&gt;Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus.&lt;/p&gt;

&lt;p&gt;Nullam accumsan lorem in dui. Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac dui quis mi consectetuer lacinia. Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris.&lt;/p&gt;

&lt;p&gt;Integer ante arcu, accumsan a, consectetuer eget, posuere ut, mauris. Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus. Vestibulum volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis vestibulum. Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet feugiat, pede. Sed lectus.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/sky.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Donec mollis hendrerit risus. Phasellus nec sem in justo pellentesque facilisis. Etiam imperdiet imperdiet orci. Nunc nec neque. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Maecenas malesuada. Praesent congue erat at massa.&lt;/p&gt;

&lt;p&gt;Sed cursus turpis vitae tortor. Donec posuere vulputate arcu. Phasellus accumsan cursus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Sed aliquam, nisi quis porttitor congue, elit erat euismod orci, ac placerat dolor lectus quis orci. Phasellus consectetuer vestibulum elit.&lt;/p&gt;

&lt;p&gt;Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Vestibulum fringilla pede sit amet augue. In turpis. Pellentesque posuere. Praesent turpis. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis. Nullam sagittis.&lt;/p&gt;

&lt;p&gt;Suspendisse pulvinar, augue ac venenatis condimentum, sem libero volutpat nibh, nec pellentesque velit pede quis nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce id purus. Ut varius tincidunt libero. Phasellus dolor. Maecenas vestibulum mollis diam. Pellentesque ut neque.&lt;/p&gt;

&lt;p&gt;Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. In ac felis quis tortor malesuada pretium. Pellentesque auctor neque nec urna. Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Aenean viverra rhoncus pede.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/snow.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Ut non enim eleifend felis pretium feugiat. Vivamus quis mi. Phasellus a est. Phasellus magna. In hac habitasse platea dictumst. Curabitur at lacus ac velit ornare lobortis. Curabitur a felis in nunc fringilla tristique. Morbi mattis ullamcorper velit.&lt;/p&gt;

&lt;p&gt;Phasellus gravida semper nisi. Nullam vel sem. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Sed hendrerit. Morbi ac felis. Nunc egestas, augue at pellentesque laoreet, felis eros vehicula leo, at malesuada velit leo quis pede. Donec interdum, metus et hendrerit aliquet, dolor diam sagittis ligula, eget egestas libero turpis vel mi.&lt;/p&gt;

&lt;p&gt;Nunc nulla. Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Donec venenatis vulputate lorem. Morbi nec metus. Phasellus blandit leo ut odio. Maecenas ullamcorper, dui et placerat feugiat, eros pede varius nisi, condimentum viverra felis nunc et lorem. Sed magna purus, fermentum eu, tincidunt eu, varius ut, felis. In auctor lobortis lacus.&lt;/p&gt;

&lt;p&gt;Quisque libero metus, condimentum nec, tempor a, commodo mollis, magna. Vestibulum ullamcorper mauris at ligula. Fusce fermentum. Nullam cursus lacinia erat. Praesent blandit laoreet nibh. Fusce convallis metus id felis luctus adipiscing. Pellentesque egestas, neque sit amet convallis pulvinar, justo nulla eleifend augue, ac auctor orci leo non est. Quisque id mi.&lt;/p&gt;

&lt;p&gt;Ut tincidunt tincidunt erat. Etiam feugiat lorem non metus. Vestibulum dapibus nunc ac augue. Curabitur vestibulum aliquam leo. Praesent egestas neque eu enim. In hac habitasse platea dictumst. Fusce a quam. Etiam ut purus mattis mauris sodales aliquam. Curabitur nisi. Quisque malesuada placerat nisl.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/windows.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nam ipsum risus, rutrum vitae, vestibulum eu, molestie vel, lacus. Sed augue ipsum, egestas nec, vestibulum et, malesuada adipiscing, dui. Vestibulum facilisis, purus nec pulvinar iaculis, ligula mi congue nunc, vitae euismod ligula urna in dolor. Mauris sollicitudin fermentum libero. Praesent nonummy mi in odio. Nunc interdum lacus sit amet orci.&lt;/p&gt;

&lt;p&gt;Vestibulum rutrum, mi nec elementum vehicula, eros quam gravida nisl, id fringilla neque ante vel mi. Morbi mollis tellus ac sapien. Phasellus volutpat, metus eget egestas mollis, lacus lacus blandit dui, id egestas quam mauris ut lacus. Fusce vel dui. Sed in libero ut nibh placerat accumsan. Proin faucibus arcu quis ante. In consectetuer turpis ut velit.&lt;/p&gt;

&lt;p&gt;Nulla sit amet est. Praesent metus tellus, elementum eu, semper a, adipiscing nec, purus. Cras risus ipsum, faucibus ut, ullamcorper id, varius ac, leo. Suspendisse feugiat. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi. Praesent nec nisl a purus blandit viverra. Praesent ac massa at ligula laoreet iaculis. Nulla neque dolor, sagittis eget, iaculis quis, molestie non, velit. Mauris turpis nunc, blandit et, volutpat molestie, porta ut, ligula. Fusce pharetra convallis urna. Quisque ut nisi. Donec mi odio, faucibus at, scelerisque quis,&lt;/p&gt;

&lt;p&gt;Picture Credits - &lt;a href=&quot;http://unsplash.com&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Sep 2016 02:04:56 +0800</pubDate>
        <link>http://localhost:4000/all-text/</link>
        <guid isPermaLink="true">http://localhost:4000/all-text/</guid>
        
        
      </item>
    
      <item>
        <title>Linux单用户模式及grub使用</title>
        <description>&lt;h3 id=&quot;rootroot&quot;&gt;对于遗忘root用户密码的解决方法就是，启动时进入单用户模式，重新修改root用户口令。&lt;/h3&gt;

&lt;h4 id=&quot;centos6x&quot;&gt;CentOS6.x&lt;/h4&gt;

&lt;p&gt;在打完oepnssh补丁升级完openssl后，没有验证ssh功能是否恢复正常就将telnet服务关闭了，导致该服务器无法远程。直连服务器发现图形化界面无法正常进入，此时只能使用单用户模式进入服务器进行操作。&lt;/p&gt;

&lt;p&gt;单用户模式，就是你现在站在这台机器面前能干的活，再通俗点就是你能够接触到这个物理设备。一般干这个活的话，基本上是系统出现严重故障或者root密码忘记等等。&lt;/p&gt;

&lt;p&gt;使用单用户登录时，我们会使用到一个叫grub的工具。GRUB是Linux系统的自举程序，也就是用来引导系统启动的程序，其主要作用就是指定Linux系统内核的位置，然后指定根目录所在的分区。当Linux系统得到可以运行的内核和根文件系统后，才可以运行，所以启动程序是非常重要的。&lt;/p&gt;

&lt;h5 id=&quot;grubvim-grub&quot;&gt;grub工具的使用类似vim编辑器， 使用grub工具进行单用户登录的步骤如下：&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;在开机启动的时候能看到引导目录，用上下方向键选择你忘记密码的那个系统，然后按“e”表示进入编辑模式。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/linux-singleuser/first.png&quot; alt=&quot;选择启动系统内核&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;编辑原有行，直接移动黑色显示条到改行，然后按“e”，进入对该行的编辑模式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/linux-singleuser/second.png&quot; alt=&quot;编辑选中的内核&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;输入single或者1后回车，回车后grub回到引导目录的编辑状态&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/linux-singleuser/third.png&quot; alt=&quot;编辑选中的内核增加single模式&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;按“b”，启动系统进入单机模式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/linux-singleuser/fourth.png&quot; alt=&quot;进入single模式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后就进入到了单用户模式，可以对操作系统进行一些配置（如打开Telnet,修改root密码等）&lt;/p&gt;

&lt;h4 id=&quot;centos7x&quot;&gt;CentOS7.x&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;开机启动时，选中想要启动的内核，按e进入编辑模式；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/linux-singleuser/choosekernel.png&quot; alt=&quot;修改内核启动参数&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ro-&amp;gt;rw&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;原本呢加载内核为ro只读方式，在进入系统后，内核可以被root用户修改
但是单用户模式实际上没有进入系统，而我们要修改参数所以要把权限放开为rw可读可写。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;init=/sysroot/bin/sh 启动后进入shell&lt;/li&gt;
  &lt;li&gt;ctl+x启动该内核&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/linux-singleuser/editkernel.png&quot; alt=&quot;修改内核启动参数&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;chroot /sysroot&lt;/li&gt;
  &lt;li&gt;在单用户模式下进行操作，例如：修改root密码&lt;/li&gt;
  &lt;li&gt;touch /.autorelabel（SELinux开启的时候需要操作这一步）&lt;/li&gt;
  &lt;li&gt;exit 退出sysroot&lt;/li&gt;
  &lt;li&gt;exec /sbin/reboot或者exec /sbin/init&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/linux-singleuser/singleusermode.png&quot; alt=&quot;修改内核启动参数&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Aug 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/linux-singleuser/</link>
        <guid isPermaLink="true">http://localhost:4000/linux-singleuser/</guid>
        
        
      </item>
    
      <item>
        <title>进入docker容器的方法</title>
        <description>&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;登陆容器的方式&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ssh登录&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;第三方工具(nsenter、nsinit)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;docker提供的工具(attach、exec)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;优点&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;符合平时登录服务器习惯，不用额外学习&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;使用方便快捷&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;使用方便快捷&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;缺点&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.秘钥管理2.ssh升级3.监控&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1.需要学习第三方工具使用规则2.docker宿主机root权限&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1.使用attach登录容器，exit退出容器2.docker宿主机root权限3.同屏&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;适用范围&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.适用docker宿主机登录至容器内部2.远程登录该容器&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;适用docker宿主机登录至容器内部&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;适用docker宿主机登录至容器内部&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;ssh&quot;&gt;SSH&lt;/h2&gt;

&lt;p&gt;使用方法： ssh 用户@IP地址 -p 端口
一般ssh登录走22端口，但是在docker中bridge网络模式使用NAT做端口映射，端口需要特殊标注&lt;/p&gt;

&lt;p&gt;适用范围：docker宿主机内部登录容器，外部终端直接登录容器&lt;/p&gt;

&lt;p&gt;优点：符合管理员、开发者登录服务器的习惯，不需要进行额外的学习&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1.秘钥管理
如果将秘钥写到镜像中，当需要更新秘钥时需要重新制作镜像，部署，重启容器，虽然这个步骤繁琐，但是个人认为还是安全的。如果将秘钥写到卷中，首先要保证该容器没有这个卷的写权限，否则存在秘钥被篡改的风险。&lt;/li&gt;
  &lt;li&gt;2.ssh升级或打补丁
ssh有漏洞或者版本升级时，需要对每一个容器进行打补丁或者升级操作&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nsenter&quot;&gt;nsenter工具&lt;/h2&gt;

&lt;p&gt;nsenter工具的安装：&lt;/p&gt;

&lt;p&gt;wget https://www.kernel.org/pub/linux/utils/util-linux/v2.28/util-linux-2.28.tar.gz&lt;/p&gt;

&lt;p&gt;tar -xzvf util-linux-2.28.tar.gz&lt;/p&gt;

&lt;p&gt;cd util-linux-2.28
./configure –without-ncurses&lt;/p&gt;

&lt;p&gt;make nsenter&lt;/p&gt;

&lt;p&gt;cp nsenter /usr/local/bin&lt;/p&gt;

&lt;p&gt;安装完成后，使用nsenter —help 命令查看，可以看到使用方法及参数则证明安装成功。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/enter-docker/nsenter-option.png&quot; alt=&quot;nsenter-option&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用nsenter 命令登录docker 容器&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/enter-docker/nsenter.png&quot; alt=&quot;nsenter-option&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在使用nsenter登录docker 容器时，一般使用前6个参数(我看别人都这么写的，想了想原因，可能使用前6个参数就可以涵盖网络，磁盘，进程管理操作系统基本的信息，我尝试只使用其中一个或几个参数登录容器，成功了但是操作系统功能使用上受限制，比如无法使用网络配置功能等)。&lt;/p&gt;

&lt;h2 id=&quot;docker-attach&quot;&gt;docker attach&lt;/h2&gt;

&lt;p&gt;使用方法：docker attach  [container name]&lt;/p&gt;

&lt;p&gt;适用范围：docker宿主机内部登录容器&lt;/p&gt;

&lt;p&gt;优点：快捷方便&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1.exit后直接退出该container&lt;/li&gt;
  &lt;li&gt;2.多屏同步 这相当于同一时间最多只能有一个终端连接容器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/enter-docker/attach.png&quot; alt=&quot;attach&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/enter-docker/attach-same-screen.png&quot; alt=&quot;attach same screen&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;docker-exec&quot;&gt;docker exec&lt;/h2&gt;
&lt;p&gt;使用方法：docker exec -it [container name] [command]&lt;/p&gt;

&lt;p&gt;适用范围：docker宿主机内部登录容器&lt;/p&gt;

&lt;p&gt;优点：快捷方便&lt;/p&gt;

&lt;p&gt;缺点：外部终端无法使用这种方法登录容器&lt;/p&gt;

&lt;p&gt;使用参数介绍：&lt;/p&gt;

&lt;p&gt;-i, –interactive               Keep STDIN open even if not attached ————交互&lt;/p&gt;

&lt;p&gt;-t, –tty                        Allocate a pseudo-TTY————分配伪终端&lt;/p&gt;

&lt;p&gt;一般情况会使用-it这个组合命令，如果单用也只能单独使用-i命令&lt;/p&gt;

&lt;p&gt;-i 参数不会产生伪终端，但是会有正确的返回&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/enter-docker/exec.png&quot; alt=&quot;attach same screen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用-it时，则和我们平常操作console界面类似。而且也不会像attach方式因为退出，导致整个容器退出。这种方式可以替代ssh或者nsenter、nsinit方式，在容器内进行操作。&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Aug 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/How-to-enter-docker/</link>
        <guid isPermaLink="true">http://localhost:4000/How-to-enter-docker/</guid>
        
        
      </item>
    
      <item>
        <title>制作docker image</title>
        <description>&lt;h3 id=&quot;febootstrapbase-image&quot;&gt;1.使用febootstrap制作base image&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;制作镜像目录&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在Docker入门（http://blog.csdn.net/woshiluahuo/article/details/51838451）中，我们讲到base image，现在要使用febootstrap工具制作base image：&lt;/p&gt;

&lt;p&gt;febootstrap -i bash -i wget -i yum -i iputils -i iproute -i man -i vim -i openssh-server -i openssh-clients -i tar -i
      gzip centos7 centos7-image http://mirrors.aliyun.com/centos/7/os/x86_64/&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.-i 表示需要安装的package，例如上面的语句：想要base image中安装：bash、wget、yum、iputils、iproute 、man、vim 、openssh-server、openssh-clients、tar 、gzip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个可以根据自己的需要进行安装，其中openssh-server、openssh-clients这2个包是为了后面ssh登录准备的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;2.centos7 是操作系统版本&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3.centos7-image 是目录（base image想放在服务器的位置）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4.源地址，我选择的是阿里云的，也可以使用其他源地址&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;执行完上面的语句会生成centos7-image文件目录，包含以下文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/make-docker-image/directory.png&quot; alt=&quot;directory&quot; /&gt;&lt;/p&gt;

&lt;p&gt;root目录下是空的，如果这时制作出来的镜像使用ssh登录，会直接进入根目录下，而一般镜像都是进入root目录下的，        &lt;br /&gt;
所以执行：cd centos7-image &amp;amp;&amp;amp; cp etc/skel/.bash* root/语句，将.bash_logout  .bash_profile  .bashrc这三个文件拷贝至root文件夹下。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;生成base image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;执行：cd centos7-image &amp;amp;&amp;amp; tar -c .|docker import - centos7-base 语句，将centos7-image目录下内容打包并将打包内容创建为一个docker镜像。
查看镜像，发现镜像中有一个名为：centos7-base的镜像&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/make-docker-image/base-image.png&quot; alt=&quot;base image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时，我们已经可以将centos7-base镜像运行在docker的container中了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/make-docker-image/run-base-image.png&quot; alt=&quot;run base image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dockfilesshimage&quot;&gt;2.使用Dockfile制作可以使用ssh登录的image&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;dockfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以我们刚刚制作的centos7-base作为base image，使用dockfile制作可以使用ssh登录的image。创建名为：Dockfile的文件，内容如下：&lt;br /&gt;
 #Dockerfile &lt;br /&gt;
FROM centos7-base  #将centos7-base作为base image，类似继承的概念，制作出的新的image具有base image的功能&lt;br /&gt;
MAINTAINER ahuo&lt;br /&gt;
RUN ssh-keygen -q -N “” -t dsa -f /etc/ssh/ssh_host_dsa_key&lt;br /&gt;
RUN ssh-keygen -q -N “” -t rsa -f /etc/ssh/ssh_host_rsh_key&lt;br /&gt;
RUN sed -ri ‘s/session    required     pam_loginuid.so/#session    required     pam_loginuid.so/g’ /etc/pam.d/sshd&lt;br /&gt;
RUN mkdir -p /root/.ssh &amp;amp;&amp;amp; chown root.root /root &amp;amp;&amp;amp; chmod 700 /root/.ssh&lt;br /&gt;
 #上面几行都是配置ssh登录目录和登录验证的，而ssh的安装时在base image centos7-base中完成的(-i openssh-server -i openssh-client)&lt;br /&gt;
EXPOSE 22 #开端口&lt;br /&gt;
RUN echo ‘root:redhat’ | chpasswd #重置root密码为redhat&lt;br /&gt;
RUN yum install tar gzip gcc vim wget -y&lt;br /&gt;
ENV LANG en_US.UTF-8&lt;br /&gt;
ENV LC_ALL en_US.UTF-8&lt;br /&gt;
CMD /usr/sbin/sshd -D&lt;br /&gt;
 #End&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/make-docker-image/</link>
        <guid isPermaLink="true">http://localhost:4000/make-docker-image/</guid>
        
        
        <category>test</category>
        
      </item>
    
      <item>
        <title>test from Amanda</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/image-2.png&quot; alt=&quot;sample post&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;header-1&quot;&gt;Header 1&lt;/h1&gt;

&lt;h2 id=&quot;header-2&quot;&gt;Header 2&lt;/h2&gt;

&lt;h3 id=&quot;header-3&quot;&gt;Header 3&lt;/h3&gt;

&lt;h4 id=&quot;header-4&quot;&gt;Header 4&lt;/h4&gt;

&lt;h5 id=&quot;header-5&quot;&gt;Header 5&lt;/h5&gt;

&lt;h6 id=&quot;header-6&quot;&gt;Header 6&lt;/h6&gt;

&lt;h2 id=&quot;paragraphs&quot;&gt;Paragraphs&lt;/h2&gt;

&lt;p&gt;These are sample paragraphs showing &lt;em&gt;italics&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt; text style. Here is an unordered  list&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;Item 2&lt;/li&gt;
  &lt;li&gt;Item 3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and an ordered list&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;Item 2&lt;/li&gt;
  &lt;li&gt;Item 3&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;A blockquote would look like this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;another one&lt;/p&gt;

  &lt;p&gt;with multiple lines&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.&lt;/p&gt;

&lt;p&gt;A code block would look like this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;About&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Contact&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Project&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.&lt;/p&gt;

&lt;p&gt;This is a simple markdown table&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Tables&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Are&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Cool&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;col 3 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;right-aligned&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;col 2 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;centered&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zebra stripes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;are neat&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Use below code to show &lt;strong&gt;Table of Contents&lt;/strong&gt; on a page&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Do&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;displayed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:toc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Sat, 07 May 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/example/</link>
        <guid isPermaLink="true">http://localhost:4000/example/</guid>
        
        
      </item>
    
      <item>
        <title>Documentation</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#features&quot; id=&quot;markdown-toc-features&quot;&gt;Features:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot; id=&quot;markdown-toc-installation&quot;&gt;Installation:&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#how-to-delete-old-gh-pages-branch&quot; id=&quot;markdown-toc-how-to-delete-old-gh-pages-branch&quot;&gt;How to delete old &lt;strong&gt;gh-pages&lt;/strong&gt; branch?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#development&quot; id=&quot;markdown-toc-development&quot;&gt;Development&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#license&quot; id=&quot;markdown-toc-license&quot;&gt;License&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#change-log&quot; id=&quot;markdown-toc-change-log&quot;&gt;Change Log&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#version-08&quot; id=&quot;markdown-toc-version-08&quot;&gt;Version 0.8&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;features&quot;&gt;Features:&lt;/h1&gt;
&lt;p&gt;Vyaasa is a theme made for blogs with long text paragraphs. Made to be easy on eyes as well.&lt;/p&gt;

&lt;p&gt;Suitable fonts are selected for better readability. Since the theme is created for smartphone reading, the theme is very light so that it loads instantly on a slow data connection.&lt;/p&gt;

&lt;p&gt;The theme comes with pre-installed &lt;strong&gt;analytics&lt;/strong&gt;, &lt;strong&gt;disqus&lt;/strong&gt; and &lt;strong&gt;html compressor&lt;/strong&gt;. But make sure you change key parameters in the &lt;strong&gt;_config.yml&lt;/strong&gt; file.&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation:&lt;/h1&gt;
&lt;p&gt;Fork the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch and delete &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch in it. This is important because &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch is used here only to host the blog. You should be using the master branch as the source and create a fresh &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;Watch my video on instlallation&lt;/p&gt;
&lt;iframe class=&quot;video&quot; src=&quot;https://www.youtube.com/embed/T2nx6tj-ZH4?rel=0?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;how-to-delete-old-gh-pages-branch&quot;&gt;How to delete old &lt;strong&gt;gh-pages&lt;/strong&gt; branch?&lt;/h2&gt;
&lt;p&gt;After forking the repository, click on &lt;strong&gt;branches&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://blog.webjeda.com/images/delete-github-branch.png&quot; alt=&quot;delete gh-pages branch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Delete &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch.
&lt;img src=&quot;http://blog.webjeda.com/images/delete-github-branch-2.png&quot; alt=&quot;delete gh-pages branch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You have to create a new &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch using the master branch. Go back to the forked repository and create &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://blog.webjeda.com/images/create-gh-pages-branch.JPG&quot; alt=&quot;create gh-pages branch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, go to settings and check the &lt;strong&gt;Github Pages&lt;/strong&gt; section. You should see a URL where the blog is hosted.&lt;/p&gt;

&lt;p&gt;This process will host the theme as a &lt;strong&gt;Project Page&lt;/strong&gt;. You can also download the files for local development.&lt;/p&gt;

&lt;p&gt;The default theme will look like this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/vyaasa-jekyll-theme-1.png&quot; alt=&quot;webjeda vyaasa jekyll theme&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A sample post would look like this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/vyaasa-jekyll-theme-2.png&quot; alt=&quot;webjeda vyaasa jekyll theme sidebar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This theme is made especially for smartphones.&lt;/p&gt;

&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/images/vyaasa-responsive-jekyll-theme-1.png&quot; alt=&quot;webjeda vyaasa responsive jekyll theme&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;development&quot;&gt;Development&lt;/h1&gt;
&lt;p&gt;Make changes to the &lt;strong&gt;master&lt;/strong&gt; branch and create a pull request. Do not use &lt;strong&gt;gh-pages&lt;/strong&gt; branch as it is used to host the theme.&lt;/p&gt;

&lt;h1 id=&quot;license&quot;&gt;License&lt;/h1&gt;
&lt;p&gt;MIT License&lt;/p&gt;

&lt;h1 id=&quot;change-log&quot;&gt;Change Log&lt;/h1&gt;

&lt;h3 id=&quot;version-08&quot;&gt;Version 0.8&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Initial release with a reader-friendly layout.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 07 May 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/documentation/</link>
        <guid isPermaLink="true">http://localhost:4000/documentation/</guid>
        
        
      </item>
    
      <item>
        <title>Just another post to show pagination!</title>
        <description>&lt;p&gt;Only 5 posts are shown on index. Others will be paginated. You can change this number in &lt;strong&gt;_config.yml&lt;/strong&gt; file.&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Apr 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/welcome-to-jekyll-2/</link>
        <guid isPermaLink="true">http://localhost:4000/welcome-to-jekyll-2/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
